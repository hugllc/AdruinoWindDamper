#include <Servo.h>
#define SERIAL_BPS 115200
int lowLED = 5;
int highLED = 7;
int targetLED = 6;
int fanspeed = 0;
int fanpin = 11;
int target;
int temp1;
int temp2;
/*
 * the target is the only variable that can be changed,
 * it is usefull when setting up a new system,
 * and is used to tune the set up.
 * The thermisotrs send out a raw analog value,
 * Which is represented by the target value.
 * We then take the two readings and subtract them,
 * then we subtract that from the target
 * and the code decides what to do.
 */

int dift;
int error;
int pwmout;
int servoStep;
/*
 * the pins for the button to contol
 * the target without connecting a computer.
 * they are "const int" because we will only be reading them
 * and now the arduino will make sure that it is never read.
 */
const int upButton = 4;
const int downButton = 3;
// variables to change
int UBState = 0;
int UBCounter = 0;
int lastDButtonState;
int lastUButtonState;
int DBState = 0;
int DBCounter = 0;
Servo myservo;

void setup() {
  Serial.begin(SERIAL_BPS);
  myservo.attach(8);
  /*
  * what ever pin the servo is on,
  * you have to attach it to the pin in the code.
  */
  // initialize the buttons as inputs
  pinMode(upButton, INPUT);
  pinMode(downButton, INPUT);
  // pins for led interface
  pinMode(7, OUTPUT);
  pinMode(6, OUTPUT);
  pinMode(5, OUTPUT);
  target = 56;
}

void loop()
{
  analogWrite(11, 75);
  //target = 56;
  temp1 = analogRead(A0);
  temp2 = analogRead(A2);
  dift = (temp2 - temp1);
  error = target - dift;
  /*
   * these serial prints are used,
   * for debuging.
   * they can be individually,
   * commented out to clean up,
   * the serial port.
   */
  //Serial.print("Fan Speed: ");
  //Serial.println(fanspeed);
  Serial.print("Temp T2: ");
  Serial.println(temp2);
  Serial.print("Temp T1: ");
  Serial.println(temp1);
  Serial.print("Dift: ");
  Serial.println(dift);
  Serial.print("Error: ");
  Serial.println(error);
  Serial.print("Servo Angle: ");
  Serial.println(myservo.read());
  Serial.print("Target: ");
  Serial.println(target);
  //read the state of the buttons
  // holf for more than one second
  UBState = digitalRead(upButton);
  DBState = digitalRead(downButton);
  if (UBState != lastUButtonState)
  {
    /* if the statement has changed
    * increment the counter.
    */
    if (UBState == HIGH)
    {
      /* if the state is HIGH the the button
      * went form off to on
      */
      target = (target + 1);
      digitalWrite(6, HIGH);
      delay(600);
      digitalWrite(6, LOW);
    }
  }
  lastUButtonState = UBState;

  if (DBState != lastDButtonState)
  {
    /* if the statement has changed
    * increment the counter.
    */
    if (DBState == HIGH)
    {
      /* if the state is HIGH the the button
      * went form off to on
      */
      target = (target - 1);
      digitalWrite(6, HIGH);
      delay(600);
      digitalWrite(6, LOW);
    }
  }
  lastDButtonState = DBState;

  /*
   * if the error is less than 0,
   * it executes this code.
   * each individual if statement can be thought of,
   * as an independent peice of code,
   * because more than one of them,
   * can not function at the same time.
   */
  if (error <= 0)
  {
    /*
    if the error is between o and -5.
    the servo only takes 1 step at a time
    to limit over correction
    */
    if (error < 0 && error > -5)
    {
      analogWrite(11, 200); //command to turn the fan on
      digitalWrite(5, HIGH); //command to turn the LED on
      myservo.write(myservo.read() + 1);
      delay(600);
      if (myservo.read() == 180)
      {
        fanspeed = map(dift, 0, -30, 150, 255);
        analogWrite(11, fanspeed);
        if (fanspeed == 0)
        {
          digitalWrite(5, HIGH);
          myservo.write(myservo.read() - 1);
          delay(600);
        }
      }
    }


    /*
         * if the error is in between 5 and 10,
         * the servo will take 2 steps at a time,
         * to ensure that the error does not deviate,
         * too much.
         */
    if (error < -5 && error > -10)
    {
      digitalWrite(5, HIGH);
      int intStep;
      myservo.write(myservo.read() + 2);
      delay(600);
      if (myservo.read() == 180)
      {
        fanspeed = map(dift, 0, -30, 100, 255);
        analogWrite(11, fanspeed);
        if (fanspeed == 0)
        {
          myservo.write(myservo.read() + 2);
          delay(600);
        }
      }
    }
    /*
     * if the error is in between 5 and 10,
     * the servo will take 3 steps at a time,
     * to ensure that the error does not deviate,
     * too much.
     */
    if (error < -10)
    {
      digitalWrite(5, HIGH);
      myservo.write(myservo.read() + 3);
      delay(600);
      if (myservo.read() == 180)
      {
        fanspeed = map(dift, 0, -30, 100, 255);
        analogWrite(11, fanspeed);
        if (fanspeed == 0)
        {
          digitalWrite(5, HIGH);
          myservo.write(myservo.read() + 1);
        }
      }
    }

  }

  /*
   * the code to executed when the
   * erro is greater than zero
  */


  if (error > 0)
  {
    digitalWrite(7, HIGH);
    /*
       * if the error is between 0 and 5,
       * the servo only takes 1 step at a time,
       * to limit over correction.
       */
    if (error > 0 && error < 5)
    {
      digitalWrite(7, HIGH);
      myservo.write(myservo.read() - 1);
      delay(600);
      if (myservo.read() == 0)
      {
        digitalWrite(7, HIGH);
        myservo.write(myservo.read() + 1);
        delay(600);
      }
    }
    /*
     * if the error is in between 5 and 10,
     * the servo will take 2 steps at a time,
     * to ensure that the error does not deviate,
     * too much.
     */
    if (error > 5 && error < 10)
    {
      digitalWrite(7, HIGH);
      myservo.write(myservo.read() - 2);
      delay(600);
      if (myservo.read() == 0)
      {
        myservo.write(myservo.read() + 1);
        delay(600);
      }
    }
    /*
     * if the error is in above 10,
     * the servo will take 3 steps at a time,
     * to ensure that the error does not deviate,
     * too much.
     */
    if (error > 10)
    {
      digitalWrite(7, HIGH);
      myservo.write(myservo.read() - 3);
      delay(600);
      if (myservo.read() == 0)
      {
        myservo.write(myservo.read() + 1);
        delay(600);
      }
    }
  }
}
